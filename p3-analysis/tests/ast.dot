digraph AST {
3 [shape=box, label="VarDecl name='loop'"];
4 [shape=box, label="VarDecl name='x'"];
6 [shape=box, label="Location name='loop'\ntype: bool"];
7 [shape=box, label="Literal value=false\ntype: bool"];
5 [shape=box, label="Assignment"];
5 -> 6;
5 -> 7;
9 [shape=box, label="Location name='x'\ntype: int"];
10 [shape=box, label="Literal value=0\ntype: int"];
8 [shape=box, label="Assignment"];
8 -> 9;
8 -> 10;
13 [shape=box, label="Location name='x'\ntype: int"];
14 [shape=box, label="Literal value=5\ntype: int"];
12 [shape=box, label="BinaryOp op='!='\ntype: bool"];
12 -> 13;
12 -> 14;
18 [shape=box, label="Location name='x'\ntype: int"];
19 [shape=box, label="Literal value=3\ntype: int"];
17 [shape=box, label="BinaryOp op='=='\ntype: bool"];
17 -> 18;
17 -> 19;
21 [shape=box, label="Break"];
20 [shape=box, label="Block\nsymbolTable: (empty)"];
20 -> 21;
16 [shape=box, label="Conditional"];
16 -> 17;
16 -> 20;
23 [shape=box, label="Location name='x'\ntype: int"];
25 [shape=box, label="Location name='x'\ntype: int"];
26 [shape=box, label="Literal value=1\ntype: int"];
24 [shape=box, label="BinaryOp op='+'\ntype: int"];
24 -> 25;
24 -> 26;
22 [shape=box, label="Assignment"];
22 -> 23;
22 -> 24;
15 [shape=box, label="Block\nsymbolTable: (empty)"];
15 -> 16;
15 -> 22;
11 [shape=box, label="WhileLoop"];
11 -> 12;
11 -> 15;
28 [shape=box, label="Location name='x'\ntype: int"];
27 [shape=box, label="Return"];
27 -> 28;
2 [shape=box, label="Block\nsymbolTable: \n  loop : bool\n  x : int"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 8;
2 -> 11;
2 -> 27;
1 [shape=box, label="FuncDecl name='main'\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}
