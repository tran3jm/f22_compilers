Running suite(s): Default
Handling main:
Handling push BP
Handling i2i SP => BP
Handling addI SP, 0 => SP
Handling loadI 2 => r0
Handling loadI 3 => r1
Handling add r0, r1 => r2
Handling i2i r2 => RET
Handling jump l0
Handling l0:
Handling i2i BP => SP
Handling pop BP
Handling return
Handling main:
Handling push BP
Handling i2i SP => BP
Handling addI SP, 0 => SP
Handling loadI 2 => r0
Handling loadI 3 => r1
Handling mult r0, r1 => r2
Handling i2i r2 => RET
Handling jump l0
Handling l0:
Handling i2i BP => SP
Handling pop BP
Handling return
Handling main:
Handling push BP
Handling i2i SP => BP
Handling addI SP, 0 => SP
Handling loadI 1 => r0
Handling loadI 2 => r1
Handling add r0, r1 => r2
Handling loadI 3 => r3
Handling add r2, r3 => r4
Handling loadI 4 => r5
Handling add r4, r5 => r6
Handling i2i r6 => RET
Handling jump l0
Handling l0:
Handling i2i BP => SP
Handling pop BP
Handling return
Handling main:
Handling push BP
Handling i2i SP => BP
Handling addI SP, 0 => SP
Handling loadI 1 => r0
Handling loadI 2 => r1
Handling add r0, r1 => r2
Handling loadI 3 => r3
Handling loadI 4 => r4
Handling add r3, r4 => r5
Handling add r2, r5 => r6
Handling i2i r6 => RET
Handling jump l0
Handling l0:
Handling i2i BP => SP
Handling pop BP
Handling return
Handling main:
Handling push BP
Handling i2i SP => BP
Handling addI SP, -8 => SP
Handling loadI 2 => r0
Handling loadI 3 => r1
Handling loadI 4 => r2
Handling mult r1, r2 => r3
Handling add r0, r3 => r4
Handling storeAI r4 => [BP-8]
Handling loadAI [BP-8] => r5
Handling i2i r5 => RET
Handling jump l0
Handling l0:
Handling i2i BP => SP
Handling pop BP
Handling return
Handling main:
Handling push BP
Handling i2i SP => BP
Handling addI SP, -8 => SP
Handling loadI 2 => r0
Handling loadI 3 => r1
Handling loadI 4 => r2
Handling mult r1, r2 => r3
Handling add r0, r3 => r4
Handling storeAI r4 => [BP-8]
Handling loadAI [BP-8] => r5
Handling loadI 4 => r6
Handling loadI 2 => r7
Handling div r6, r7 => r8
Handling sub r5, r8 => r9
Handling storeAI r9 => [BP-8]
Handling loadAI [BP-8] => r10
Handling loadI 3 => r11
Handling mult r10, r11 => r12
Handling loadI 4 => r13
Handling add r12, r13 => r14
Handling storeAI r14 => [BP-8]
Handling loadAI [BP-8] => r15
Handling i2i r15 => RET
Handling jump l0
Handling l0:
Handling i2i BP => SP
Handling pop BP
Handling return
Handling main:
Handling push BP
Handling i2i SP => BP
Handling addI SP, 0 => SP
Handling loadI 1 => r0
Handling cbr r0 => l1, l2
Handling l1:
Handling loadI 2 => r1
Handling loadI 1 => r2
Handling add r1, r2 => r3
Handling i2i r3 => RET
Handling jump l0
Handling jump l3
Handling l2:
Handling loadI 3 => r4
Handling loadI 1 => r5
Handling add r4, r5 => r6
Handling i2i r6 => RET
Handling jump l0
Handling l3:
Handling l0:
Handling i2i BP => SP
Handling pop BP
Handling return
Handling main:
Handling push BP
Handling i2i SP => BP
Handling addI SP, -8 => SP
Handling loadI 0 => r0
Handling storeAI r0 => [BP-8]
Handling l1:
Handling loadAI [BP-8] => r1
Handling loadI 10 => r2
Handling cmp_LT r1, r2 => r3
Handling cbr r3 => l2, l3
Handling l2:
Handling loadAI [BP-8] => r4
Handling loadI 1 => r5
Handling add r4, r5 => r6
Handling storeAI r6 => [BP-8]
Handling jump l1
Handling l3:
Handling loadAI [BP-8] => r7
Handling i2i r7 => RET
Handling jump l0
Handling l0:
Handling i2i BP => SP
Handling pop BP
Handling return
Handling add:
Handling push BP
Handling i2i SP => BP
Handling addI SP, 0 => SP
Handling loadAI [BP+16] => r0
Handling loadAI [BP+24] => r1
Handling add r0, r1 => r2
Handling i2i r2 => RET
Handling jump l0
Handling l0:
Handling i2i BP => SP
Handling pop BP
Handling return
Handling main:
Handling push BP
Handling i2i SP => BP
Handling addI SP, 0 => SP
Handling loadI 2 => r3
Handling loadI 3 => r4
Handling push r4
Handling push r3
Handling call add
Handling addI SP, 16 => SP
Handling i2i RET => r5
Handling i2i r5 => RET
Handling jump l1
Handling l1:
Handling i2i BP => SP
Handling pop BP
Handling return
90%: Checks: 11, Failures: 0, Errors: 1
public.c:46:E:Public:B_spilled_regs:0: (after this point) Received signal 11 (Segmentation fault)
