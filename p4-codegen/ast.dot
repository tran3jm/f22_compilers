digraph AST {
3 [shape=box, label="VarDecl name='i'"];
5 [shape=box, label="Location name='i'\ncode: \nloadAI [BP-8] => r0\nreg: r0\ntype: int"];
6 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r1\nreg: r1\ntype: int"];
4 [shape=box, label="Assignment\ncode: \nloadI 0 => r1\nstoreAI r1 => [BP-8]"];
4 -> 5;
4 -> 6;
9 [shape=box, label="Location name='i'\ncode: \nloadAI [BP-8] => r2\nreg: r2\ntype: int"];
10 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r3\nreg: r3\ntype: int"];
8 [shape=box, label="BinaryOp op='<'\nreg: r4\ncode: \nloadAI [BP-8] => r2\nloadI 2 => r3\ncmp_LT r2, r3 => r4\ntype: bool"];
8 -> 9;
8 -> 10;
13 [shape=box, label="Location name='i'\ncode: \nloadAI [BP-8] => r5\nreg: r5\ntype: int"];
15 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r6\nreg: r6\ntype: int"];
16 [shape=box, label="Location name='i'\ncode: \nloadAI [BP-8] => r7\nreg: r7\ntype: int"];
14 [shape=box, label="BinaryOp op='+'\nreg: r8\ncode: \nloadI 1 => r6\nloadAI [BP-8] => r7\nadd r6, r7 => r8\ntype: int"];
14 -> 15;
14 -> 16;
12 [shape=box, label="Assignment\ncode: \nloadI 1 => r6\nloadAI [BP-8] => r7\nadd r6, r7 => r8\nstoreAI r8 => [BP-8]"];
12 -> 13;
12 -> 14;
19 [shape=box, label="Location name='i'\ncode: \nloadAI [BP-8] => r9\nreg: r9\ntype: int"];
20 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r10\nreg: r10\ntype: int"];
18 [shape=box, label="BinaryOp op='<'\nreg: r11\ncode: \nloadAI [BP-8] => r9\nloadI 1 => r10\ncmp_LT r9, r10 => r11\ntype: bool"];
18 -> 19;
18 -> 20;
23 [shape=box, label="Location name='i'\ncode: \nloadAI [BP-8] => r12\nreg: r12\ntype: int"];
24 [shape=box, label="Location name='i'\ncode: \nloadAI [BP-8] => r13\nreg: r13\ntype: int"];
22 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r13\nstoreAI r13 => [BP-8]"];
22 -> 23;
22 -> 24;
21 [shape=box, label="Block\ncode: \nloadAI [BP-8] => r13\nstoreAI r13 => [BP-8]\nsymbolTable: (empty)"];
21 -> 22;
17 [shape=box, label="WhileLoop\ncode: \nl4:\nloadAI [BP-8] => r9\nloadI 1 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l5, l6\nl5:\nloadAI [BP-8] => r13\nstoreAI r13 => [BP-8]\njump l4\nl6:"];
17 -> 18;
17 -> 21;
11 [shape=box, label="Block\ncode: \nloadI 1 => r6\nloadAI [BP-8] => r7\nadd r6, r7 => r8\nstoreAI r8 => [BP-8]\nl4:\nloadAI [BP-8] => r9\nloadI 1 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l5, l6\nl5:\nloadAI [BP-8] => r13\nstoreAI r13 => [BP-8]\njump l4\nl6:\nsymbolTable: (empty)"];
11 -> 12;
11 -> 17;
7 [shape=box, label="WhileLoop\ncode: \nl1:\nloadAI [BP-8] => r2\nloadI 2 => r3\ncmp_LT r2, r3 => r4\ncbr r4 => l2, l3\nl2:\nloadI 1 => r6\nloadAI [BP-8] => r7\nadd r6, r7 => r8\nstoreAI r8 => [BP-8]\nl4:\nloadAI [BP-8] => r9\nloadI 1 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l5, l6\nl5:\nloadAI [BP-8] => r13\nstoreAI r13 => [BP-8]\njump l4\nl6:\njump l1\nl3:"];
7 -> 8;
7 -> 11;
26 [shape=box, label="Literal value=5\ncode: \nloadI 5 => r14\nreg: r14\ntype: int"];
25 [shape=box, label="Return\ncode: \nloadI 5 => r14\ni2i r14 => RET\njump l0"];
25 -> 26;
2 [shape=box, label="Block\ncode: \nloadI 0 => r1\nstoreAI r1 => [BP-8]\nl1:\nloadAI [BP-8] => r2\nloadI 2 => r3\ncmp_LT r2, r3 => r4\ncbr r4 => l2, l3\nl2:\nloadI 1 => r6\nloadAI [BP-8] => r7\nadd r6, r7 => r8\nstoreAI r8 => [BP-8]\nl4:\nloadAI [BP-8] => r9\nloadI 1 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l5, l6\nl5:\nloadAI [BP-8] => r13\nstoreAI r13 => [BP-8]\njump l4\nl6:\njump l1\nl3:\nloadI 5 => r14\ni2i r14 => RET\njump l0\nsymbolTable: \n  i : int {stack offset=-8}"];
2 -> 3;
2 -> 4;
2 -> 7;
2 -> 25;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 0 => r1\nstoreAI r1 => [BP-8]\nl1:\nloadAI [BP-8] => r2\nloadI 2 => r3\ncmp_LT r2, r3 => r4\ncbr r4 => l2, l3\nl2:\nloadI 1 => r6\nloadAI [BP-8] => r7\nadd r6, r7 => r8\nstoreAI r8 => [BP-8]\nl4:\nloadAI [BP-8] => r9\nloadI 1 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l5, l6\nl5:\nloadAI [BP-8] => r13\nstoreAI r13 => [BP-8]\njump l4\nl6:\njump l1\nl3:\nloadI 5 => r14\ni2i r14 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 8\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}
